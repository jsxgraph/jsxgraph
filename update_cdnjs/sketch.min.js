/*
    JSXGraph 1.8.0

    Copyright 2008-2023
        Matthias Ehmann,
        Michael Gerhaeuser,
        Carsten Miller,
        Bianca Valentin,
        Andreas Walter,
        Alfred Wassermann,
        Peter Wilfahrt

    This file is part of JSXGraph.

    JSXGraph is free software dual licensed under the GNU LGPL or MIT License.

    You can redistribute it and/or modify it under the terms of the

      * GNU Lesser General Public License as published by
        the Free Software Foundation, either version 3 of the License, or
        (at your option) any later version
      OR
      * MIT License: https://github.com/jsxgraph/jsxgraph/blob/master/LICENSE.MIT

    JSXGraph is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License and
    the MIT License along with JSXGraph. If not, see <https://www.gnu.org/licenses/>
    and <https://opensource.org/licenses/MIT/>.
*/

/**
 * UTF-8 Decoder by Bjoern Hoehrmann
 *
 * Copyright (c) 2008-2009 Bjoern Hoehrmann <bjoern@hoehrmann.de>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this
 * software and associated documentation files (the "Software"), to deal in the Software
 * without restriction, including without limitation the rights to use, copy, modify, merge,
 * publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons
 * to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or
 * substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING
 * BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
!function(){"use strict";JXG.SketchReader=function(s,e){this.read=function(){var r,i,t,o,a,d;if(o=new JXG.Util.Unzip(JXG.Util.Base64.decodeAsArray(e)).unzip(),!JXG.exists(o[0]))return"";for(o=JXG.Util.UTF8.decode(o[0][0]),a=(d=jQuery.parseJSON(o)).pop(),i=JXG.exists(a.unredo)?a.unredo:d.length-1,r=0;r<=i;r++)if(0!==d[r].type){try{t=d[r].type>50?JXG.SketchReader.generateJCodeMeta(d[r],s):JXG.SketchReader.generateJCode(d[r],s,d)}catch(s){JXG.debug("#steps: "+d.length),JXG.debug("step: "+r+", type: "+d[r].type),JXG.debug(d[r])}s.jc.parse(t[0],!0)}return t=a.boundingBox,s.jc.parse("$board.setView("+JSON.stringify(t)+");"),""}},JXG.extend(JXG.SketchReader,{generateJCodeMeta:function(){return["","","",""]},id:function(){return JXG.Util.genUUID()},generator:{toFixed:8,freeLine:!1,useGlider:!1,useSymbols:!1},generateJCode:function(s,e,r){var i,t,o,a,d,n,_,l,p,g,c,u,m,b,G,f,J,X,v,C,h,y,O,E,T,P=[],k="",N="",L="",x="",I=function(s){return v.toFixed>0?(s=parseFloat(s),JXG.toFixed(s,v.toFixed)):s},Y=function(s){return v.useSymbols&&e.jc.scope.locals[s]?e.jc.scope.locals[s]:l[s]};if(v=JXG.SketchReader.generator,l=e.objects,C="",h="id: '"+s.dest_id+"', ",JXG.exists(e)&&v.useSymbols&&s.type!==JXG.GENTYPE_ABLATION&&(h="",C=s.dest_id+" = ",JXG.isArray(s.src_ids)))for(i=0;i<s.src_ids.length;i++)(d=e.jc.findSymbol(Y(s.src_ids[i]),0)).length>0&&(s.src_ids[i]=d[0]);if(s.type>50)return JXG.SketchReader.generateJCodeMeta(s,e);switch(s.type){case JXG.GENTYPE_TRUNCATE:k="trunclen = "+JXG.Options.trunclen+"; ";break;case JXG.GENTYPE_JCODE:k=s.args.code;break;case JXG.GENTYPE_AXIS:k=s.args.name[0]+" = point("+s.args.coords[0].usrCoords[1]+", ",k+=s.args.coords[0].usrCoords[2]+") <<id: '"+s.dest_sub_ids[0]+"', name: '",k+=s.args.name[0]+"', fixed: true, priv: true, visible: false>>; "+s.args.name[1],k+=" = point("+s.args.coords[1].usrCoords[1]+", ",k+=s.args.coords[1].usrCoords[2]+") <<id: '"+s.dest_sub_ids[1]+"', name: '",k+=s.args.name[1]+"', fixed: true, priv: true, visible: false>>; "+s.args.name[2],k+=" = point("+s.args.coords[2].usrCoords[1]+", ",k+=s.args.coords[2].usrCoords[2]+") <<id: '"+s.dest_sub_ids[2]+"', name: '",k+=s.args.name[2]+"', fixed: true, priv: true, visible: false>>; ",k+=s.args.name[3]+" = axis("+s.args.name[0]+", "+s.args.name[1]+") ",k+="<<id: '"+s.dest_sub_ids[3]+"', name: '"+s.args.name[3]+"', ticks: ",k+="<<minorHeight:0, majorHeight:10, insertTicks: true, ticksDistance: 1, drawLabels: true",k+=', label: <<offset: [-4, -16], parse: false, display: "internal">>',k+=", drawZero: false>>>>; ",k+=s.args.name[4]+" = axis("+s.args.name[0]+", "+s.args.name[2]+") ",k+="<<id: '"+s.dest_sub_ids[4]+"', name: '"+s.args.name[4]+"', ticks: ",k+="<<minorHeight:0, majorHeight:10, insertTicks: true, ticksDistance: 1, drawLabels: true",k+=', label: <<offset: [10, 0], parse: false, display: "internal">>',k+=", drawZero: false>>>>; ",k+=s.dest_sub_ids[3]+".visible = false; ",k+=s.dest_sub_ids[4]+".visible = false; ",N="remove("+s.dest_sub_ids[4]+"); remove("+s.dest_sub_ids[3],N+="); remove("+s.dest_sub_ids[2]+"); ",N+="remove("+s.dest_sub_ids[1]+"); remove("+s.dest_sub_ids[0]+"); ";break;case JXG.GENTYPE_MID:k=C+"midpoint("+s.src_ids[0]+", "+s.src_ids[1]+") <<"+h,k+="fillColor: '"+s.args.fillColor+"'",JXG.exists(s.args.strokeColor)&&(k+=", strokeColor: '"+s.args.strokeColor+"'"),k+=">>; ",N="remove("+s.dest_id+"); ";break;case JXG.GENTYPE_REFLECTION:case JXG.GENTYPE_REFLECTION_ON_LINE:if("polygon"===s.args.type){for(k="",f=s.src_ids[s.src_ids.length-1],i=1;i<s.src_ids.length-1;i++)k+=C+"reflection("+s.src_ids[i]+", "+f+') <<id:"'+s.dest_sub_ids[i-1]+'"',JXG.exists(s.args.subnames)?k+=', name:"'+s.args.subnames[i-1]+'"':k+=', name: ""',k+=", color: '"+s.args.strokeColor+"'",k+=", snaptogrid: "+JXG.Options.elements.snapToGrid,k+=", snaptopoints: "+JXG.Options.elements.snapToPoints+">>;\n";for(y=s.dest_sub_ids.length/2,k+=C+"polygon(",k+=s.dest_sub_ids.slice(0,y).join(),k+=") <<borders: <<ids: ['"+s.dest_sub_ids.slice(y,2*y).join("', '")+"']",O=[],i=0;i<y;i++)O.push("''");k+=", names: ["+O.join()+"]",k+=">>, "+h+" fillOpacity: ",k+=s.args.opacity+", name: '' ",k+=", hasInnerPoints: "+JXG.Options.polygon.hasInnerPoints,""!==s.args.name&&(k+=', name: "'+s.args.name+'"',k+=", withLabel: true"),k+=", fillColor: '"+s.args.fillColor+"'",k+=", snaptogrid: "+JXG.Options.elements.snapToGrid,k+=", snaptopoints: "+JXG.Options.elements.snapToPoints+">>; ",k+=s.dest_id+".hasInnerPoints = function() { return !("+s.dest_id+".fillColor == 'transparent' || "+s.dest_id+".fillColor == 'none' || "+s.dest_id+".fillOpacity == 0); }; "}else if("line"===s.args.type||"vector"===s.args.type){for(k="",f=s.src_ids[s.src_ids.length-1],i=1;i<s.src_ids.length-1;i++)k+=C+"reflection("+s.src_ids[i]+", "+f+') <<id:"'+s.dest_sub_ids[i-1]+'"',JXG.exists(s.args.subnames)?k+=', name:"'+s.args.subnames[i-1]+'"':k+=', name: ""',k+=", color: '"+s.args.strokeColor+"'",k+=", snaptogrid: "+JXG.Options.elements.snapToGrid,k+=", snaptopoints: "+JXG.Options.elements.snapToPoints+">>;\n";if("vector"===s.args.type?k+=C+"arrow("+s.dest_sub_ids[0]+","+s.dest_sub_ids[1]+") ":k+=C+"line("+s.dest_sub_ids[0]+","+s.dest_sub_ids[1]+") ",k+="<<",k+=h,k+="strokeColor: '"+s.args.strokeColor+"'",k+=", opacity: '"+s.args.opacity+"'",k+=', name: "'+s.args.name+'"',k+=', id: "'+s.dest_id+'"',JXG.exists(s.args.attr))for(T in s.args.attr)s.args.attr.hasOwnProperty(T)&&(k+=", "+T+": "+s.args.attr[T]);""!==s.args.name&&(k+=", withLabel: true"),k+=">>; "}else if("circle"===s.args.type){if(k+=C+"reflection("+s.src_ids[0]+","+s.src_ids[2]+") ",k+="<<",k+=h,k+="strokeColor: '"+s.args.strokeColor+"'",k+=", opacity: '"+s.args.opacity+"'",k+=', name: "'+s.args.name+'"',k+=', id: "'+s.dest_id+'"',JXG.exists(s.args.attr))for(T in s.args.attr)s.args.attr.hasOwnProperty(T)&&(k+=", "+T+": "+s.args.attr[T]);""!==s.args.name&&(k+=", withLabel: true"),k+=', center: <<id:"'+s.dest_sub_ids[0]+'"',JXG.exists(s.args.subnames)?k+=', name:"'+s.args.subnames[0]+'"':k+=', name: ""',k+=", color: '"+s.args.strokeColor+"'",k+=", snaptogrid: "+JXG.Options.elements.snapToGrid,k+=", snaptopoints: "+JXG.Options.elements.snapToPoints+">>",k+=">>; ",k+=s.dest_id+".hasInnerPoints = function() { return !("+s.dest_id+".fillColor == 'transparent' || "+s.dest_id+".fillColor == 'none' || "+s.dest_id+".fillOpacity == 0); }; "}else{if(k=C+"reflection("+s.src_ids[0]+", "+s.src_ids[1]+") <<"+h,k+="fillColor: '"+s.args.fillColor+"'",JXG.exists(s.args.strokeColor)&&(k+=", strokeColor: '"+s.args.strokeColor+"'",k+=", opacity: '"+s.args.opacity+"'"),k+=', name: "'+s.args.name+'"',k+=', id: "'+s.dest_id+'"',JXG.exists(s.args.attr))for(T in s.args.attr)s.args.attr.hasOwnProperty(T)&&(k+=", "+T+": "+s.args.attr[T]);""!==s.args.name&&(k+=", withLabel: true"),k+=">>; "}for(N="",i=0;i<s.dest_sub_ids.length;i++)0!==s.dest_sub_ids[i]&&(N+="remove("+s.dest_sub_ids[i]+"); ");N+="remove("+s.dest_id+"); ";break;case JXG.GENTYPE_MIRRORELEMENT:case JXG.GENTYPE_REFLECTION_ON_POINT:if("polygon"===s.args.type){for(k="",f=s.src_ids[s.src_ids.length-1],i=1;i<s.src_ids.length-1;i++)k+=C+"mirrorelement("+s.src_ids[i]+", "+f+') <<id:"'+s.dest_sub_ids[i-1]+'"',JXG.exists(s.args.subnames)?k+=', name:"'+s.args.subnames[i-1]+'"':k+=', name: ""',k+=", color: '"+s.args.strokeColor+"'",k+=", snaptogrid: "+JXG.Options.elements.snapToGrid,k+=", snaptopoints: "+JXG.Options.elements.snapToPoints+">>;\n";for(y=s.dest_sub_ids.length/2,k+=C+"polygon(",k+=s.dest_sub_ids.slice(0,y).join(),k+=") <<borders: <<ids: ['"+s.dest_sub_ids.slice(y,2*y).join("', '")+"']",O=[],i=0;i<y;i++)O.push("''");k+=", names: ["+O.join()+"]",k+=">>, "+h+" fillOpacity: ",k+=s.args.opacity+", name: '' ",k+=", hasInnerPoints: "+JXG.Options.polygon.hasInnerPoints,""!==s.args.name&&(k+=', name: "'+s.args.name+'"',k+=", withLabel: true"),k+=", fillColor: '"+s.args.fillColor+"'",k+=", snaptogrid: "+JXG.Options.elements.snapToGrid,k+=", snaptopoints: "+JXG.Options.elements.snapToPoints+">>; ",k+=s.dest_id+".hasInnerPoints = function() { return !("+s.dest_id+".fillColor == 'transparent' || "+s.dest_id+".fillColor == 'none' || "+s.dest_id+".fillOpacity == 0); }; "}else if("line"===s.args.type||"vector"===s.args.type){for(k="",f=s.src_ids[s.src_ids.length-1],i=1;i<s.src_ids.length-1;i++)k+=C+"mirrorelement("+s.src_ids[i]+", "+f+') <<id:"'+s.dest_sub_ids[i-1]+'"',JXG.exists(s.args.subnames)?k+=', name:"'+s.args.subnames[i-1]+'"':k+=', name: ""',k+=", color: '"+s.args.strokeColor+"'",k+=", snaptogrid: "+JXG.Options.elements.snapToGrid,k+=", snaptopoints: "+JXG.Options.elements.snapToPoints+">>;\n";if("vector"===s.args.type?k+=C+"arrow("+s.dest_sub_ids[0]+","+s.dest_sub_ids[1]+") ":k+=C+"line("+s.dest_sub_ids[0]+","+s.dest_sub_ids[1]+") ",k+="<<",k+=h,k+="strokeColor: '"+s.args.strokeColor+"'",k+=", opacity: '"+s.args.opacity+"'",k+=', name: "'+s.args.name+'"',k+=', id: "'+s.dest_id+'"',JXG.exists(s.args.attr))for(T in s.args.attr)s.args.attr.hasOwnProperty(T)&&(k+=", "+T+": "+s.args.attr[T]);""!==s.args.name&&(k+=", withLabel: true"),k+=">>; "}else if("circle"===s.args.type){if(k+=C+"mirrorelement("+s.src_ids[0]+","+s.src_ids[2]+") ",k+="<<",k+=h,k+="strokeColor: '"+s.args.strokeColor+"'",k+=", opacity: '"+s.args.opacity+"'",k+=', name: "'+s.args.name+'"',k+=', id: "'+s.dest_id+'"',JXG.exists(s.args.attr))for(T in s.args.attr)s.args.attr.hasOwnProperty(T)&&(k+=", "+T+": "+s.args.attr[T]);""!==s.args.name&&(k+=", withLabel: true"),k+=', center: <<id:"'+s.dest_sub_ids[0]+'"',JXG.exists(s.args.subnames)?k+=', name:"'+s.args.subnames[0]+'"':k+=', name: ""',k+=", color: '"+s.args.strokeColor+"'",k+=", snaptogrid: "+JXG.Options.elements.snapToGrid,k+=", snaptopoints: "+JXG.Options.elements.snapToPoints+">>",k+=">>; ",k+=s.dest_id+".hasInnerPoints = function() { return !("+s.dest_id+".fillColor == 'transparent' || "+s.dest_id+".fillColor == 'none' || "+s.dest_id+".fillOpacity == 0); }; "}else{if(k=C+"mirrorelement("+s.src_ids[0]+", "+s.src_ids[1]+") <<"+h,k+="fillColor: '"+s.args.fillColor+"'",JXG.exists(s.args.strokeColor)&&(k+=", strokeColor: '"+s.args.strokeColor+"'",k+=", opacity: '"+s.args.opacity+"'"),k+=', id: "'+s.dest_id+'"',k+=', name: "'+s.args.name+'"',JXG.exists(s.args.attr))for(T in s.args.attr)s.args.attr.hasOwnProperty(T)&&(k+=", "+T+": "+s.args.attr[T]);""!==s.args.name&&(k+=", withLabel: true"),k+=">>; "}for(N="",i=0;i<s.dest_sub_ids.length;i++)0!==s.dest_sub_ids[i]&&(N+="remove("+s.dest_sub_ids[i]+"); "+N);N+="remove("+s.dest_id+"); "+N;break;case JXG.GENTYPE_TANGENT:s.args.create_point?(a=s.dest_sub_ids[2],k="point("+I(s.args.usrCoords[1])+","+I(s.args.usrCoords[2])+") <<id: '",k+=a+"', fillColor: '"+s.args.fillColor+"'",JXG.exists(s.args.strokeColor)&&(k+=", strokeColor: '"+s.args.strokeColor+"'"),k+=">>; "+a+".glide(",k+=s.src_ids[0]+"); ",N="remove("+a+"); "):a=s.src_ids[0],k+=C+"tangent("+a+") <<"+h+"point1: <<name: '",k+="', id: '"+s.dest_sub_ids[0]+"', priv: true>>, point2: <<name: '",k+="', id: '"+s.dest_sub_ids[1]+"', priv: true>> >>; ",N="remove("+s.dest_sub_ids[0]+"); "+N,N="remove("+s.dest_id+"); remove("+s.dest_sub_ids[1]+"); "+N;break;case JXG.GENTYPE_PARALLEL:s.args.create_point?(a=s.dest_sub_ids[1],k="point("+I(s.args.usrCoords[1])+", "+I(s.args.usrCoords[2])+") <<id: '",k+=a+"', name: '', visible: false, priv: true>>; ",N="remove("+a+"); "):a=s.src_ids[1],k+=C+"parallel("+s.src_ids[0]+", "+a+") <<"+h+"name: '', point: <<id: '",k+=s.dest_sub_ids[0]+"', name: ''>> >>; ",N="remove("+s.dest_id+"); remove("+s.dest_sub_ids[0]+"); "+N;break;case JXG.GENTYPE_BISECTORLINES:k=(k="bisectorlines("+s.src_ids[0]+", "+s.src_ids[1]+") <<line1: <<id: '")+s.dest_sub_ids[2]+"', point1: <<id: '"+s.dest_sub_ids[1],k+="', name: ''>>, point2: <<id: '"+s.dest_sub_ids[0],k+="', name: ''>>>>, line2: <<id: '"+s.dest_sub_ids[5],k+="', point1: <<id: '"+s.dest_sub_ids[4]+"', name: '",k+="'>>, point2: <<id: '"+s.dest_sub_ids[3]+"', name: '",k+="'>>>>>>; ",N="remove("+s.dest_sub_ids[5]+"); remove("+s.dest_sub_ids[4]+"); remove(",N+=s.dest_sub_ids[3]+"); remove("+s.dest_sub_ids[2]+"); remove(",N+=s.dest_sub_ids[1]+"); remove("+s.dest_sub_ids[0]+"); ";break;case JXG.GENTYPE_BOARDIMG:k="image('"+s.args.s+"', [ "+s.args.anchor+" ], [ "+s.args.scale+" ]) ",k+="<<id: '"+s.dest_id+"'>>; ",N="remove("+s.dest_id+"); ";break;case JXG.GENTYPE_BISECTOR:s.args.create_point?(k="",N="",p=s.dest_sub_ids[1],g=s.dest_sub_ids[2],v.useGlider?(k+="glider("+I(s.args.usrCoords[1])+", "+I(s.args.usrCoords[2])+", "+s.src_ids[0]+")",k+="<<id: '"+p+"', name:'', withLabel:false, priv:true, visible:false >>; ",k+="glider("+I(s.args.usrCoords[1])+", "+I(s.args.usrCoords[2])+", "+s.src_ids[1]+")",k+="<<id: '"+g+"', name:'', withLabel:false, priv:true, visible:false >>; "):(k+="point("+I(s.args.usrCoords[1])+", "+I(s.args.usrCoords[2])+") ",k+="<<id:'"+p+"', ",k+="name:'', withLabel:false, priv:true, visible:false >>; ",k+=p+".glide("+s.src_ids[0]+"); ",k+="point("+I(s.args.usrCoords[1])+", "+I(s.args.usrCoords[2])+") ",k+="<<id:'"+g+"', ",k+="name:'', priv:true, visible:false >>; ",k+=g+".glide("+s.src_ids[1]+"); "),N+="remove("+p+"); ",N+="remove("+g+"); ",s.args.create_intersection?(c=s.dest_sub_ids[3],k+="intersection("+s.src_ids[0]+", "+s.src_ids[1]+", 0) ",k+="<<id:'"+c+"', fillColor: '"+s.args.fillColor+"', ",k+="name:'', priv:true, visible:false >>; ",N+="remove("+c+"); "):c=s.src_ids[2],k+=C+"bisector("+p+", "+c+", "+g+") ",k+="<<"+h+"name: '', point: <<id: '"+s.dest_sub_ids[0]+"', priv: true, name: '",k+=s.dest_sub_ids[0]+"'>> >>;",N+="remove("+s.dest_id+"); remove("+s.dest_sub_ids[0]+");"):(k=C+"bisector("+s.src_ids[1]+", "+s.src_ids[2]+", "+s.src_ids[0],k+=") <<"+h+"name: '', point: <<id: '"+s.dest_sub_ids[0]+"', priv: true, name: '",k+=s.dest_sub_ids[0]+"'>>>>;",N="remove("+s.dest_id+"); remove("+s.dest_sub_ids[0]+");");break;case JXG.GENTYPE_NORMAL:s.args.create_point?(a=s.dest_sub_ids[1],k="point("+I(s.args.usrCoords[1])+", "+I(s.args.usrCoords[2]),k+=") <<id: '"+a+"', name: '', visible: false, priv: true>>; ",N="remove("+a+"); "):a=s.src_ids[1],k+=C+"normal("+a+", "+s.src_ids[0]+") <<"+h,k+="name: '', point: <<id: '"+s.dest_sub_ids[0]+"', name: '",k+="'>> >>; ",N="remove("+s.dest_id+"); remove("+s.dest_sub_ids[0]+"); "+N;break;case JXG.GENTYPE_PERPSEGMENT:k+=C+"perpendicularsegment("+s.src_ids[1]+", "+s.src_ids[0]+") <<"+h,k+="name: '', point: <<id: '"+s.dest_sub_ids[0]+"', name: '",k+="'>> >>; ",N="remove("+s.dest_id+"); remove("+s.dest_sub_ids[0]+"); "+N;break;case JXG.GENTYPE_POINT:k=C+"point("+I(s.args.usrCoords[1])+", "+I(s.args.usrCoords[2]),k+=")"+(v.useSymbols?"":" <<id: '"+s.dest_id+"', snaptogrid: "+JXG.Options.elements.snapToGrid+", snaptopoints: "+JXG.Options.elements.snapToPoints+(JXG.exists(s.args.name)?", name: '"+s.args.name+"'":"")+">>")+"; ",N="remove("+s.dest_id+"); ";break;case JXG.GENTYPE_GLIDER:v.useGlider?(k=C+"glider("+I(s.args.usrCoords[1])+", "+I(s.args.usrCoords[2]),k+=", "+s.src_ids[0]+")",k+=(v.useSymbols?"":"<<id: '"+s.dest_id+"', snaptogrid: false, snaptopoints: false, snaptopoints: "+JXG.Options.elements.snapToPoints+">>")+";"):(k=C+"point("+I(s.args.usrCoords[1])+", "+I(s.args.usrCoords[2]),k+=") <<"+h+"fillColor: '"+JXG.Options.glider.fillColor+"'",k+=", strokeColor: '"+JXG.Options.glider.strokeColor+"'",k+=", snapToGrid: false, snapToPoints: false",k+=">>; "+s.dest_id,k+=".glide("+s.src_ids[0]+"); "),k+=s.dest_id+".onPolygon = "+!!s.args.onPolygon+";",s.args&&s.args.undoIsEmpty||(N="remove("+s.dest_id+"); ");break;case JXG.GENTYPE_INTERSECTION:k=C+"intersection("+s.src_ids[0]+", "+s.src_ids[1]+", "+s.args.choice,k+=") <<"+h+" fillColor: '"+JXG.Options.intersection.fillColor+"'",k+=", strokeColor: '"+JXG.Options.intersection.strokeColor+"'",k+=">>; ",s.args&&s.args.undoIsEmpty||(N="remove("+s.dest_id+"); ");break;case JXG.GENTYPE_MIGRATE:var R,w;if(k="$board.migratePoint("+s.src_ids[0]+", "+s.dest_id+", false); ",s.args&&s.args.migrateToGlider)N=s.dest_id+".free(); "+s.dest_id,N+=".fillColor = '"+s.args.fillColor+"'; "+s.dest_id,N+=".strokeColor = '"+s.args.strokeColor+"'; ",N+="point("+s.args.usrCoords[1]+", "+s.args.usrCoords[2]+")",N+=" <<id: '"+s.src_ids[0]+"', name: ''>>; ",N+="$board.migratePoint("+s.dest_id+", "+s.src_ids[0]+", false); ",N+=s.src_ids[0]+".name = '"+s.args.orig_name+"'; ",N+=s.src_ids[0]+".label.setText('"+s.args.orig_name+"'); ",w=(R=e.objects[s.dest_id]).slideObject.id,N+=C+"point("+R.coords.usrCoords[1]+", "+R.coords.usrCoords[2]+") ",N+="<<"+h+"fillColor: '"+JXG.Options.glider.fillColor+"'>>; ",N+=s.dest_id+".glide("+w+"); ";break;case JXG.GENTYPE_COMBINED:for(k=N="",i=0;i<s.args.steps.length;i++)k+=(J=this.generateJCode(s.args.steps[i],e,r))[0],N=J[2]+N;break;case JXG.GENTYPE_CIRCLE:var S="name: '', withLabel: true,";s.args.withName&&(S="withLabel: true,"),s.args.create_by_additional_point||s.args.create_point?(JXG.exists(s.args.center_existing)&&s.args.center_existing||(k="point("+I(s.args.usrCoords[1])+", "+I(s.args.usrCoords[2])+") ",k+="<<id: '"+s.dest_sub_ids[0]+"', "+S+" visible: true, priv: false>>; "),k+=C+"circle("+s.dest_sub_ids[0]+", "+s.src_ids[0]+") <<"+h,k+="name: '', fillOpacity: "+JXG.Options.opacityLevel+", snaptogrid: "+JXG.Options.elements.snapToGrid+", snaptopoints: "+JXG.Options.elements.snapToPoints+", hasInnerPoints: true>>; ",k+=s.dest_id+".hasInnerPoints = function() { return !("+s.dest_id+".fillColor == 'transparent' || "+s.dest_id+".fillColor == 'none' || "+s.dest_id+".fillOpacity == 0); }; ",N="remove("+s.dest_id+"); remove("+s.dest_sub_ids[0]+"); "):s.args.create_by_radius?(k="",JXG.exists(s.args.center_existing)&&s.args.center_existing||(JXG.exists(s.args.x)&&JXG.exists(s.args.y)?k+="point("+I(s.args.x)+", "+I(s.args.y)+") ":k+="point("+I(s.args.usrCoords[1])+", "+I(s.args.usrCoords[2])+") ",k+="<<id: '"+s.dest_sub_ids[0]+"', "+S+" visible: true, priv: false>>; "),JXG.exists(s.args.r)?k+=C+"circle('"+s.dest_sub_ids[0]+"', "+I(s.args.r)+") <<"+h:k+=C+"circle('"+s.dest_sub_ids[0]+"', "+I(s.args.radius)+") <<"+h,k+="name: '', fillOpacity: "+JXG.Options.opacityLevel+", snaptogrid: "+JXG.Options.elements.snapToGrid+", snaptopoints: "+JXG.Options.elements.snapToPoints+", hasInnerPoints: true>>; ",k+=s.dest_id+".hasInnerPoints = function() { return !("+s.dest_id+".fillColor == 'transparent' || "+s.dest_id+".fillColor == 'none' || "+s.dest_id+".fillOpacity == 0); }; ",N="remove("+s.dest_id+"); remove("+s.dest_sub_ids[0]+"); "):2===s.src_ids.length?(k="midpoint("+s.src_ids[0]+", "+s.src_ids[1]+")",k+="<<id: '"+s.dest_sub_ids[0]+"', "+S+" visible: true, priv: false>>; ",k+=C+"circle("+s.dest_sub_ids[0]+", "+s.src_ids[0]+") <<"+h,k+="name: '', fillOpacity: "+JXG.Options.opacityLevel+", snaptogrid: "+JXG.Options.elements.snapToGrid+", snaptopoints: "+JXG.Options.elements.snapToPoints+">>;",N="remove("+s.dest_id+"); remove("+s.dest_sub_ids[0]+"); "):(k=C+"circle("+s.src_ids[0]+", "+s.src_ids[1]+", "+s.src_ids[2],k+=") <<center: <<id: '"+s.dest_sub_ids[0]+"', "+S,k+=" visible: true>>, "+h+"name: '', fillOpacity: "+JXG.Options.opacityLevel+", snaptogrid: "+JXG.Options.elements.snapToGrid+", snaptopoints: "+JXG.Options.elements.snapToPoints+">>; ",N="remove("+s.dest_id+"); remove("+s.dest_sub_ids[0]+"); ");break;case JXG.GENTYPE_CIRCLE2POINTS:s.args.create_two_points?(k="point("+I(s.args.x1)+", "+I(s.args.y1)+") <<id: '"+s.dest_sub_ids[0],k+="'>>; ",k+="point("+I(s.args.x2)+", "+I(s.args.y2)+") <<id: '",k+=s.dest_sub_ids[1]+"'>>; ",k+=C+"circle("+s.dest_sub_ids[0]+", "+s.dest_sub_ids[1]+") <<"+h,k+="name: '', fillOpacity: "+JXG.Options.opacityLevel+", snaptogrid: "+JXG.Options.elements.snapToGrid+", snaptopoints: "+JXG.Options.elements.snapToPoints+">>; ",N="remove("+s.dest_id+"); remove("+s.dest_sub_ids[1]+"); remove(",N+=s.dest_sub_ids[0]+"); "):s.args.create_point?(k="point("+I(s.args.x)+", "+I(s.args.y)+") <<id: '"+s.dest_sub_ids[0],k+="'>>; ",k+=C+"circle("+s.dest_sub_ids[0]+", "+s.src_ids[0]+") <<"+h,k+="name: '', fillOpacity: "+JXG.Options.opacityLevel+", snaptogrid: "+JXG.Options.elements.snapToGrid+", snaptopoints: "+JXG.Options.elements.snapToPoints+">>; ",N="remove("+s.dest_id+"); remove("+s.dest_sub_ids[0]+"); "):s.args.create_by_radius?(k=C+"circle("+s.src_ids[0]+", "+s.args.r+") <<"+h,k+="name: '', fillOpacity: "+JXG.Options.opacityLevel+", snaptogrid: "+JXG.Options.elements.snapToGrid+", snaptopoints: "+JXG.Options.elements.snapToPoints+">>; ",N="remove("+s.dest_id+"); "):(k=C+"circle("+s.src_ids[0]+", "+s.src_ids[1]+") <<"+h,k+="name: '', fillOpacity: "+JXG.Options.opacityLevel+", snaptogrid: "+JXG.Options.elements.snapToGrid+", snaptopoints: "+JXG.Options.elements.snapToPoints+">>; ",N="remove("+s.dest_id+"); ");break;case JXG.GENTYPE_LINE:if(o=0,t=0,s.args.create_point1){for(p=s.dest_sub_ids[o],o+=1,n=[],i=0;i<s.args.p1.length;i++)n[i]=I(s.args.p1[i]);k="point("+n.join(", ")+") <<id: '"+p+"', name: '', visible: false, isinfinit: true, ",k+="snaptogrid: false, snaptopoints: false, priv: true>>; ",N="remove("+p+"); "}else p=s.src_ids[t],t+=1;if(s.args.create_point2){for(g=s.dest_sub_ids[o++],n=[],i=0;i<s.args.p2.length;i++)n[i]=I(s.args.p2[i]);k+="point("+n.join(", ")+") <<id: '"+g+"', name: '', visible: false, isinfinit: true, ",k+="snaptogrid: false, snaptopoints: false, priv: true>>; ",N="remove("+g+"); "+N}else g=s.src_ids[t],t+=1;if(d="line",n="",_=p+", "+g,s.args.create_point1&&s.args.create_point2&&v.freeLine){for(k="",N="",2===s.args.p1.length&&s.args.p1.unshift(1),2===s.args.p2.length&&s.args.p2.unshift(1),_=JXG.Math.crossProduct(s.args.p1,s.args.p2),i=0;i<_.length;i++)_[i]=I(_[i]);_=_.join(", ")}s.args.first||s.args.last?(s.args.first||(n="straightFirst: "+s.args.first),s.args.last||(n="straightLast: "+s.args.last),n.length>0&&!v.useSymbols&&(n+=", ")):d="segment",v.useSymbols||(h="id: '"+s.dest_id+"'"),k+=C+d+"("+_+")",n.length+h.length>0?k+=" <<"+n+h+", name: '', snaptogrid: "+JXG.Options.elements.snapToGrid+", snaptopoints: "+JXG.Options.elements.snapToPoints+">>; ":k+=" <<name: '', snaptogrid: "+JXG.Options.elements.snapToGrid+", snaptopoints: "+JXG.Options.elements.snapToPoints+">>; ",N="remove("+s.dest_id+"); "+N;break;case JXG.GENTYPE_VECTOR:if(o=0,t=0,s.args.create_point1){for(p=s.dest_sub_ids[o],o+=1,n=[],i=0;i<s.args.p1.length;i++)n[i]=I(s.args.p1[i]);k="point("+n.join(", ")+") <<id: '"+p+"', name: '', visible: true, ",k+="snaptogrid: "+JXG.Options.elements.snapToGrid+", snaptopoints: false, priv: false>>; ",N="remove("+p+"); "}else p=s.src_ids[t],t+=1;if(s.args.create_point2){for(g=s.dest_sub_ids[o++],n=[],i=0;i<s.args.p2.length;i++)n[i]=I(s.args.p2[i]);k+="point("+n.join(", ")+") <<id: '"+g+"', name: '', visible: true, ",k+="layer: "+JXG.Options.layer.line+", opacity: 0.2, ",k+="snaptogrid: "+JXG.Options.elements.snapToGrid+", snaptopoints: false, priv: false>>; ",N="remove("+g+"); "+N}else g=s.src_ids[t],t+=1;n="",_=p+", "+g,d="arrow",v.useSymbols||(h="id: '"+s.dest_id+"'"),k+=C+d+"("+_+")",n.length+h.length>0?k+=" <<"+n+h+", name: '', strokeColor: 'black', snaptogrid: "+JXG.Options.elements.snapToGrid+", snaptopoints: "+JXG.Options.elements.snapToPoints+">>; ":k+=" <<name: '', strokeColor: 'black', snaptogrid: "+JXG.Options.elements.snapToGrid+", snaptopoints: "+JXG.Options.elements.snapToPoints+">>; ",N="remove("+s.dest_id+"); "+N;break;case JXG.GENTYPE_TRIANGLE:for(i=0;i<s.args.create_point.length;i++)s.args.create_point[i]&&(k+="point("+I(s.args.coords[i].usrCoords[1])+", ",k+=I(s.args.coords[i].usrCoords[2])+") <<id: '"+s.dest_sub_ids[i],k+="', snaptogrid: "+JXG.Options.elements.snapToGrid,k+=", snaptopoints: "+JXG.Options.elements.snapToPoints+">>; ");for(i=0;i<s.dest_sub_ids.length;i++)0!==s.dest_sub_ids[i]&&(N="remove("+s.dest_sub_ids[i]+"); "+N);if(N="remove("+s.dest_id+"); "+N,k+=C+"polygon(",3===s.src_ids.length)for(i=0;i<s.src_ids.length;i++)k+=s.src_ids[i],i<s.src_ids.length-1&&(k+=", ");else for(i=0;i<3;i++)0!==s.dest_sub_ids[i]&&((s.src_ids.length>0||i>0)&&(k+=", "),k+=s.dest_sub_ids[i]);k+=") <<borders: <<ids: ['"+s.dest_sub_ids[3]+"', '"+s.dest_sub_ids[4]+"', '"+s.dest_sub_ids[5]+"']",k+=", names: ['', '', '']",k+=">>, "+h+" fillOpacity: ",k+=JXG.Options.opacityLevel+", name: '' ",k+=", hasInnerPoints: "+JXG.Options.polygon.hasInnerPoints,k+=", snaptogrid: "+JXG.Options.elements.snapToGrid,k+=", snaptopoints: "+JXG.Options.elements.snapToPoints+">>; ",k+=s.dest_id+".hasInnerPoints = function() { return !("+s.dest_id+".fillColor == 'transparent' || "+s.dest_id+".fillColor == 'none' || "+s.dest_id+".fillOpacity == 0); }; ";break;case JXG.GENTYPE_QUADRILATERAL:for(i=0;i<s.args.create_point.length;i++)s.args.create_point[i]&&(k+="point("+I(s.args.coords[i].usrCoords[1])+", ",k+=I(s.args.coords[i].usrCoords[2])+") <<id: '"+s.dest_sub_ids[i],k+="', snaptogrid: "+JXG.Options.elements.snapToGrid,k+=", snaptopoints: "+JXG.Options.elements.snapToPoints+">>; ");for(i=0;i<s.dest_sub_ids.length;i++)0!==s.dest_sub_ids[i]&&(N="remove("+s.dest_sub_ids[i]+"); "+N);for(N="remove("+s.dest_id+"); "+N,k+=C+"polygon(",i=0;i<s.src_ids.length;i++)k+=s.src_ids[i],i<s.src_ids.length-1&&(k+=", ");k+=") <<borders: <<ids: [ '"+s.dest_sub_ids[4]+"', '"+s.dest_sub_ids[5],k+="', '",k+=s.dest_sub_ids[6]+"', '"+s.dest_sub_ids[7]+"' ]",k+=", names: ['', '', '', '']",k+=">>, "+h,k+=" fillOpacity: ",k+=JXG.Options.opacityLevel+", name: '' ",k+=", hasInnerPoints: "+JXG.Options.polygon.hasInnerPoints,k+=", snaptogrid: "+JXG.Options.elements.snapToGrid,k+=", snaptopoints: "+JXG.Options.elements.snapToPoints+">>; ",k+=s.dest_id+".hasInnerPoints = function() { return !("+s.dest_id+".fillColor == 'transparent' || "+s.dest_id+".fillColor == 'none' || "+s.dest_id+".fillOpacity == 0); }; ";break;case JXG.GENTYPE_TEXT:"'"!==s.args.str.slice(0,1)&&'"'!==s.args.str.slice(0,1)&&"function"!==s.args.str.slice(0,8)&&(s.args.str="'"+s.args.str+"'"),k=C+"text("+I(s.args.x)+", "+I(s.args.y)+", "+s.args.str+") <<",k+=h+"name: ''",void 0!==s.args.anchor&&(k+=", anchor: "+s.args.anchor),k+=">>; ",N="remove("+s.dest_id+"); ";break;case JXG.GENTYPE_RULER:k=C+"tapemeasure([ "+s.args.p1+" ], [ "+s.args.p2+" ]) <<",k+=h+"name: '', precision: "+JXG.Options.trunclen+", point1: <<id: '"+s.dest_sub_ids[0]+"', snaptogrid: "+JXG.Options.elements.snapToGrid+">>, point2: <<id: '"+s.dest_sub_ids[1]+"', snaptogrid: "+JXG.Options.elements.snapToGrid+">> >>; ",N="remove("+s.dest_id+"); ";break;case JXG.GENTYPE_POLYGON:if(s.args.create_point)for(i=0;i<s.args.create_point.length;i++)s.args.create_point[i]&&(k+="point("+I(s.args.coords[i].usrCoords[1])+", ",k+=I(s.args.coords[i].usrCoords[2])+") <<id: '"+s.dest_sub_ids[i],k+="', snaptogrid: "+JXG.Options.elements.snapToGrid,k+=", snaptopoints: "+JXG.Options.elements.snapToPoints+">>; ");if(s.dest_sub_ids)for(i=0;i<s.dest_sub_ids.length;i++)0!==s.dest_sub_ids[i]&&(N="remove("+s.dest_sub_ids[i]+"); "+N);for(N="remove("+s.dest_id+"); "+N,k+=C+"polygon(",i=0;i<s.src_ids.length;i++)k+=s.src_ids[i],i!==s.src_ids.length-1&&(k+=", ");for(k+=") <<borders: <<ids: ['",i=0;i<s.dest_sub_ids.length;i++)k+=s.dest_sub_ids[i],i<s.dest_sub_ids.length-1&&(k+="', '");for(k+="']",k+=", names: [",i=0;i<s.dest_sub_ids.length;i++)k+="''",i<s.dest_sub_ids.length-1&&(k+=", ");k+="]",k+=">>, "+h+" fillOpacity: "+JXG.Options.opacityLevel,k+=", hasInnerPoints: "+JXG.Options.polygon.hasInnerPoints,k+=", name: ''>>; ",k+=s.dest_id+".hasInnerPoints = function() { return !("+s.dest_id+".fillColor == 'transparent' || "+s.dest_id+".fillColor == 'none' || "+s.dest_id+".fillOpacity == 0); }; ",N="remove("+s.dest_id+"); ";break;case JXG.GENTYPE_POLYGONCOPY:for(y=s.args.num_vertices,k="",N="",i=0;i<y;++i)k+=C+"point("+I(s.args.points[i][1])+", "+I(s.args.points[i][2]),k+=")"+(v.useSymbols?"":" <<id: '"+s.dest_sub_ids[i]+"', snaptogrid: "+JXG.Options.elements.snapToGrid+", snaptopoints: "+JXG.Options.elements.snapToPoints+">>")+"; ",N+="remove("+s.dest_sub_ids[i]+"); ";for(k+=C+"polygon(",i=0;i<y;++i)k+=s.dest_sub_ids[i],i!==y-1&&(k+=", ");for(k+=") <<borders: <<ids: ['",i=y;i<s.dest_sub_ids.length;i++)k+=s.dest_sub_ids[i],i<s.dest_sub_ids.length-1&&(k+="', '");for(k+="']",k+=", names: [",i=y;i<s.dest_sub_ids.length;i++)k+="''",i<s.dest_sub_ids.length-1&&(k+=", ");k+="]",k+=">>, "+h+" fillOpacity: "+JXG.Options.opacityLevel,k+=", hasInnerPoints: "+JXG.Options.polygon.hasInnerPoints,k+=", name: ''>>; ",k+=s.dest_id+".hasInnerPoints = function() { return !("+s.dest_id+".fillColor == 'transparent' || "+s.dest_id+".fillColor == 'none' || "+s.dest_id+".fillOpacity == 0); }; ",N+="remove("+s.dest_id+"); ";break;case JXG.GENTYPE_REGULARPOLYGON:for(k=C+"regularpolygon("+s.src_ids.join(", ")+", ",k+=s.args.corners+") <<borders: <<ids: [ ",i=0;i<s.args.corners;i++)k+="'"+s.dest_sub_ids[i]+"'",i!==s.args.corners-1&&(k+=", "),N="remove("+s.dest_sub_ids[i]+"); "+N;for(k+="]",k+=", names: [",i=0;i<s.args.corners;i++)k+="''",i<s.args.corners-1&&(k+=", ");for(k+="]",k+=">>, vertices: <<ids: [ ",i=0;i<s.args.corners-2;i++)k+="'"+s.dest_sub_ids[i+parseInt(s.args.corners,10)]+"'",i!==s.args.corners-3&&(k+=", "),N="remove("+s.dest_sub_ids[i+parseInt(s.args.corners,10)]+"); "+N;k+=" ]",k+=", name: ''",k+=">>, "+h,k+=" fillOpacity: "+JXG.Options.opacityLevel,k+=", hasInnerPoints: "+JXG.Options.polygon.hasInnerPoints,k+=", name: ''>>; ",k+=s.dest_id+".hasInnerPoints = function() { return !("+s.dest_id+".fillColor == 'transparent' || "+s.dest_id+".fillColor == 'none' || "+s.dest_id+".fillOpacity == 0); }; ",N="remove("+s.dest_id+"); "+N;break;case JXG.GENTYPE_SECTOR:k=C,p=s.dest_id,g=s.dest_sub_ids[0],c=p+(s.args.suffix_glider??"_glider"),u=p+(s.args.suffix_segment1??"_segment1"),m=p+(s.args.suffix_segment2??"_segment2"),k+="sector("+s.src_ids.join(", ")+") ",k+="<<"+h+" name: '', fillOpacity: "+JXG.Options.opacityLevel+", hasInnerPoints: true, arc: <<id: '"+g+"', priv:true>> >>; ",k+=p+".hasInnerPoints = function() { return !("+p+".fillColor == 'transparent' || "+p+".fillColor == 'none' || "+p+".fillOpacity == 0); }; ",k+="glider(function () { return "+s.src_ids[2]+".X(); }, function () { return "+s.src_ids[2]+".Y(); }, "+g+") ",k+="<<id: '"+c+"', name:'', parents: ['"+p+"', '"+g+"', '"+s.src_ids[2]+"'], priv:true>>; ",k+="segment("+s.src_ids[0]+", "+s.src_ids[1]+") ",k+="<<id: '"+u+"', name:'', parents: ['"+p+"', '"+s.src_ids[0]+"', '"+s.src_ids[1]+"'], priv:true>>; ",k+="segment("+s.src_ids[0]+", "+c+") ",k+="<<id: '"+m+"', name:'', parents: ['"+p+"', '"+s.src_ids[0]+"', '"+c+"'], priv:true>>; ",N="",N+="remove("+c+"); ",N+="remove("+u+"); ",N+="remove("+m+"); ",N+="remove("+p+"); ";break;case JXG.GENTYPE_ANGLE:k=C+"angle("+s.src_ids.join(", ")+") ",k+="<<",k+="dot: <<priv:true, id: '"+s.dest_sub_ids[0]+"', name: ''>>, ",k+=h+" fillOpacity: "+JXG.Options.opacityLevel,JXG.exists(s.args)&&JXG.exists(s.args.radius)&&(JXG.isNumber(s.args.radius)?k+=", radius: "+s.args.radius:k+=", radius: '"+s.args.radius+"'"),k+=", hasInnerPoints: true>>; ",N="remove("+s.dest_id+"); ",N+="remove("+s.dest_sub_ids[0]+"); ";break;case JXG.GENTYPE_NONREFLEXANGLE:k=C+"nonreflexangle("+s.src_ids.join(", ")+") ",k+="<<",k+="dot: <<priv:true, id: '"+s.dest_sub_ids[0]+"', ",k+="name: ''>>, ",k+=h+" fillOpacity: "+JXG.Options.opacityLevel,JXG.exists(s.args)&&JXG.exists(s.args.radius)&&(JXG.isNumber(s.args.radius)?k+=", radius: "+s.args.radius:k+=", radius: '"+s.args.radius+"'"),k+=">>; ",N="remove("+s.dest_id+"); ",N+="remove("+s.dest_sub_ids[0]+"); ";break;case JXG.GENTYPE_REFLEXANGLE:k=C+"reflexangle("+s.src_ids.join(", ")+") ",k+="<<",k+="dot: <<priv:true, id: '"+s.dest_sub_ids[0]+"', ",k+="name: ''>>, ",k+=h+" fillOpacity: "+JXG.Options.opacityLevel,JXG.exists(s.args)&&JXG.exists(s.args.radius)&&(JXG.isNumber(s.args.radius)?k+=", radius: "+s.args.radius:k+=", radius: '"+s.args.radius+"'"),k+=">>; ",N="remove("+s.dest_id+"); ",N+="remove("+s.dest_sub_ids[0]+"); ";break;case JXG.GENTYPE_SLOPETRIANGLE:k=C+"slopetriangle("+s.src_ids.join(", ")+") <<",k+=h+" name: '',",k+="borders:   <<ids: ['"+s.dest_sub_ids[4]+"', '"+s.dest_sub_ids[5]+"', '"+s.dest_sub_ids[6]+"']>>,",k+="basepoint: <<id: '"+s.dest_sub_ids[0]+"', name: '', priv: true >>, ",k+="baseline:  <<id: '"+s.dest_sub_ids[1]+"', name: '', priv: true >>,",k+="glider:    <<id: '"+s.dest_sub_ids[2]+"', name: '', priv: false >>, ",k+="toppoint:  <<id: '"+s.dest_sub_ids[3]+"', name: '', priv: false >>",8===s.dest_sub_ids.length&&(k+=", tangent: <<id: '"+s.dest_sub_ids[7]+"', priv: true, point1: <<name: '', priv: true >>, point2: <<name: '', priv: true >> >>"),k+=">>;",N="remove("+s.dest_id+"); ";break;case JXG.GENTYPE_PLOT:k=C+s.args.plot_type+"("+s.args.func,(isNaN(s.args.a)||null===s.args.a||void 0===s.args.a||"-infinity"===s.args.a)&&(s.args.a=""),(isNaN(s.args.b)||null===s.args.b||void 0===s.args.b||"infinity"===s.args.b)&&(s.args.b=""),s.args.a!=s.args.b&&(k+=", "+s.args.a+", "+s.args.b),k+=") <<",s.args.isPolar&&(k+="curveType: 'polar', "),k+=h+"name: '', withLabel: true, strokeColor: '"+s.args.color+"', doAdvancedPlot: true, doAdvancedPlotOld: false >>; ",N="remove("+s.dest_id+"); ";break;case JXG.GENTYPE_PATH:for(y=s.args.points.length,k+=C+"cardinalspline([",i=0;i<s.args.points.length;i++)JXG.isString(s.args.points[i])?k+="'"+s.args.points[i]+"'":(3===s.args.points[i].length?(O=s.args.points[i][1].toPrecision(4),E=s.args.points[i][2].toPrecision(4)):(O=s.args.points[i][0].toPrecision(4),E=s.args.points[i][1].toPrecision(4)),k+="["+O+","+E+"]"),i<y-1&&(k+=",");k+="], function() {    o = $('"+s.dest_id+"');    if(o) {      return o.tau;    } else {      return 1;    }}, "+s.args.type,k+=") <<",k+=h+"name: '', withLabel: false, tau: "+s.args.tau+", ",k+="fixed: false, ",s.args.createPoints||(k+="createPoints: false, "),k+="isArrayOfCoordinates: true, ",k+="strokeWidth: "+s.args.strokeWidth+", ",k+="strokeColor: '"+s.args.strokeColor+"' >>; ",N="remove("+s.dest_id+"); ";break;case JXG.GENTYPE_DERIVATIVE:k=C+"derivative("+s.src_ids+")",k+=" <<",k+="dash: 2",k+=" >>;";break;case JXG.GENTYPE_SLIDER:k=C+"slider(["+I(s.args.x1)+", "+I(s.args.y1)+"], ["+I(s.args.x2)+", "+I(s.args.y2)+"], ["+I(s.args.min??s.args.start)+", "+I(s.args.start??s.args.ini)+", "+I(s.args.max??s.args.end)+"]) ",k+="<<"+h,k+=" snapWidth: "+I(s.args.step??"0.1")+", ",k+="baseline: <<id: '"+s.dest_sub_ids[0]+"', name: ''>>, ",k+="highline: <<id: '"+s.dest_sub_ids[1]+"', name: ''>>, ",k+="point1: <<id: '"+s.dest_sub_ids[2]+"', name: ''>>, ",k+="point2: <<id: '"+s.dest_sub_ids[3]+"', name: ''>>, ",k+="label: <<id: '"+s.dest_sub_ids[4]+"', name: '', priv: true>>",k+=", name: '"+s.args.name+"'>>; ",N="remove("+s.dest_id+"); ",N+="remove("+s.dest_sub_ids[4]+"); ",N+="remove("+s.dest_sub_ids[3]+"); ",N+="remove("+s.dest_sub_ids[2]+"); ",N+="remove("+s.dest_sub_ids[1]+"); ",N+="remove("+s.dest_sub_ids[0]+"); ";break;case JXG.GENTYPE_DELETE:for(J=[],L=[],x=[],i=0;i<s.args.steps.length;i++)(J=r[s.args.steps[i]].type>50?this.generateJCodeMeta(r[s.args.steps[i]],e):this.generateJCode(r[s.args.steps[i]],e,r)).length>=3&&""!==JXG.trim(J[2])&&(k=J[2]+k),J.length>=4&&JXG.isFunction(J[3])&&L.unshift(J[3]),J.length>=1&&""!==JXG.trim(J[0])&&(N+=J[0]),J.length>=2&&JXG.isFunction(J[1])&&x.push(J[1]);break;case JXG.GENTYPE_COPY:for(f in P=[],s.args.steps)if(s.args.steps.hasOwnProperty(f)){if((X=JXG.deepCopy(r[s.args.steps[f]])).type===JXG.GENTYPE_COPY){for(i=0;i<X.args.map.length;i++)for(t=0;t<s.args.map.length;t++)X.args.map[i].copy===s.args.map[t].orig&&(X.args.map[i].copy=s.args.map[t].copy);X=JXG.SketchReader.replaceStepDestIds(X,X.args.map)}else X=JXG.SketchReader.replaceStepDestIds(X,s.args.map);P.push(X)}for(i=0;i<P.length;i++)J=P[i].type>50?this.generateJCodeMeta(P[i],e):this.generateJCode(P[i],e,r),""!==JXG.trim(J[0])&&(k+=J[0]),JXG.isFunction(J[1])&&L.push(J[1]),""!==JXG.trim(J[2])&&(N=J[2]+N),JXG.isFunction(J[3])&&x.unshift(J[3]);if(s.args.dep_copy)for(i=0;i<s.args.map.length;i++)Y(s.args.map[i].orig).elementClass===JXG.OBJECT_CLASS_POINT&&(k+=s.args.map[i].copy,k+=".X = function() { return ("+s.args.map[i].orig+".X() - ",k+=I(s.args.x)+"); }; ",k+=s.args.map[i].copy,k+=".Y = function() { return ("+s.args.map[i].orig+".Y() - ",k+=I(s.args.y)+"); }; ");else for(i=0;i<s.args.free_points.length;i++)b=Y(s.args.free_points[i].orig).coords.usrCoords[1],G=Y(s.args.free_points[i].orig).coords.usrCoords[2],k+=s.args.free_points[i].copy+".X = function() { return ",k+=I(b-s.args.x)+"; }; ",k+=s.args.free_points[i].copy+".Y = function() { return ",k+=I(G-s.args.y)+"; }; ",k+=s.args.free_points[i].copy+".free(); ";for(t=0;t<s.args.map.length;t++)(f=Y(s.args.map[t].orig)).type!==JXG.OBJECT_TYPE_CIRCLE||JXG.exists(f.point2)||(k+=s.args.map[t].copy+".setRadius(function () { return ",k+=s.args.map[t].orig+".radius(); }); ");break;case JXG.GENTYPE_ABLATION:for(b=Y(s.src_ids[0]).coords.usrCoords[1],G=Y(s.src_ids[0]).coords.usrCoords[2],k="point("+I(b-s.args.x)+", "+I(G-s.args.y)+") <<id: '",k+=s.dest_sub_ids[0]+"', name: '', withLabel: false>>; ",k+="circle('"+s.dest_sub_ids[0]+"', 1) <<id: '"+s.dest_sub_ids[1],k+="', fillOpacity: "+JXG.Options.opacityLevel,k+=", strokeColor: '#888888', visible: true, name: '', withLabel: false>>; ",1===s.args.fids.length?s.args.func=s.args.fids[0]+".radius()":s.args.func="dist("+s.args.fids[0]+", "+s.args.fids[1]+")",k+=s.dest_sub_ids[1]+".setRadius(function() { return "+s.args.func+"; }); ",t=0;t<s.src_ids.length;t++)k+=s.src_ids[t]+".addChild("+s.dest_sub_ids[0]+"); ",k+=s.src_ids[t]+".addChild("+s.dest_sub_ids[1]+"); ";0!==s.args.migrate&&-1!==s.args.migrate&&(k+="$board.migratePoint("+s.dest_sub_ids[0]+", "+s.args.migrate+"); "),N="remove("+s.dest_sub_ids[1]+"); remove("+s.dest_sub_ids[0]+"); ";break;case JXG.GENTYPE_VECTORCOPY:for(b=Y(s.src_ids[0]).coords.usrCoords[1],G=Y(s.src_ids[0]).coords.usrCoords[2],k="point("+I(b-s.args.x)+", "+I(G-s.args.y)+") <<id: '",k+=s.dest_sub_ids[0]+"', name: '', withLabel: false>>; ",k+="parallelpoint('"+s.src_ids[0]+"','"+s.src_ids[1]+"','"+s.dest_sub_ids[0]+"') <<id: '"+s.dest_sub_ids[1],k+="', strokeColor: '#888888', visible: true, priv: false, name: '', ",k+="layer: "+JXG.Options.layer.line+", opacity: 0.2, withLabel: false>>; ",k+="arrow('"+s.dest_sub_ids[0]+"','"+s.dest_sub_ids[1]+"') <<id: '"+s.dest_sub_ids[2],k+="', strokeColor: '#888888', visible: true, name: '', withLabel: false>>; ",t=0;t<s.src_ids.length;t++)k+=s.src_ids[t]+".addChild("+s.dest_sub_ids[0]+"); ",k+=s.src_ids[t]+".addChild("+s.dest_sub_ids[1]+"); ",k+=s.src_ids[t]+".addChild("+s.dest_sub_ids[2]+"); ";0!==s.args.migrate&&-1!==s.args.migrate&&(k+="$board.migratePoint("+s.dest_sub_ids[0]+", "+s.args.migrate+"); "),N="remove("+s.dest_sub_ids[1]+"); remove("+s.dest_sub_ids[0]+"); remove("+s.dest_sub_ids[2]+");";break;case JXG.GENTYPE_MOVEMENT:if(s.args.obj_type===JXG.OBJECT_TYPE_LINE||s.args.obj_type===JXG.OBJECT_TYPE_VECTOR)k=s.src_ids[0]+".move(["+I(s.args.coords[0].usrCoords[0])+", ",k+=I(s.args.coords[0].usrCoords[1])+", "+I(s.args.coords[0].usrCoords[2])+"]); ",N=s.src_ids[0]+".move(["+s.args.zstart[0]+", "+s.args.xstart[0]+", ",N+=s.args.ystart[0]+"]); ",k+=s.src_ids[1]+".move(["+I(s.args.coords[1].usrCoords[0])+", ",k+=I(s.args.coords[1].usrCoords[1])+", "+I(s.args.coords[1].usrCoords[2])+"]); ",N+=s.src_ids[1]+".move(["+s.args.zstart[1]+", "+s.args.xstart[1]+", ",N+=s.args.ystart[1]+"]); ";else if(s.args.obj_type===JXG.OBJECT_TYPE_CIRCLE)k=s.src_ids[0]+".move(["+I(s.args.coords[0].usrCoords[1])+", ",k+=I(s.args.coords[0].usrCoords[2])+"]); ",N=s.src_ids[0]+".move(["+s.args.xstart+", "+s.args.ystart+"]); ",s.args.has_point2&&(k+=s.src_ids[1]+".move(["+I(s.args.coords[1].usrCoords[1])+", ",k+=I(s.args.coords[1].usrCoords[2])+"]); ",N+=s.src_ids[1]+".move(["+s.args.old_p2x+", "+s.args.old_p2y,N+="]); ");else if(s.args.obj_type===JXG.OBJECT_TYPE_POLYGON)for(k=N="",i=0;i<s.src_ids.length;i++)k+=s.src_ids[i]+".move(["+I(s.args.coords[i].usrCoords[1])+", ",k+=I(s.args.coords[i].usrCoords[2])+"]); ",N+=s.src_ids[i]+".move(["+s.args.xstart[i]+", "+s.args.ystart[i],N+="]); ";else JXG.exists(s.args.coords[0])&&(k=s.src_ids[0]+".move(["+I(s.args.coords[0].usrCoords[1])+", ",k+=I(s.args.coords[0].usrCoords[2])+"]); ",N=s.src_ids[0]+".move(["+s.args.xstart+", "+s.args.ystart+"]); ");break;default:return JXG.debug("No such GENTYPE!"+s.type),[]}return[k,L,N,x]},replaceStepDestIds:function(s,e){var r,i,t=[];for(r=0;r<e.length;r++){for(t.push(e[r].copy),s.dest_id===e[r].orig&&(s.dest_id=e[r].copy),i=0;i<s.dest_sub_ids.length;i++)s.dest_sub_ids[i]===e[r].orig&&(s.dest_sub_ids[i]=e[r].copy);for(i=0;i<s.src_ids.length;i++)s.src_ids[i]===e[r].orig&&(s.src_ids[i]=e[r].copy)}for(i=0;i<s.dest_sub_ids.length;i++)JXG.isInArray(t,s.dest_sub_ids[i])||(s.dest_sub_ids[i]=this.id());return s.src_ids=JXG.uniqueArray(s.src_ids),s.dest_sub_ids=JXG.uniqueArray(s.dest_sub_ids),s}}),JXG.registerReader(JXG.SketchReader,["sketch","sketchometry"])}();
